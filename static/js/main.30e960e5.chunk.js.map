{"version":3,"sources":["apis/youtube.js","components/SearchBar.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","components/Spinner.js","components/App.js","index.js"],"names":["axios","create","baseURL","params","part","maxResults","type","key","process","SearchBar","state","term","onFormSubmit","e","preventDefault","props","onTermSubmit","onInputChange","setState","target","value","className","onSubmit","this","style","width","placeholder","onChange","React","Component","VideoItem","video","onVideoSelect","onClick","src","snippet","thumbnails","medium","url","alt","description","title","VideoList","videos","renderedList","map","id","videoId","VideoDetail","videoSrc","marginTop","Spinner","height","message","defaultPorps","App","selectedVideo","loading","noResultsMessage","a","youtube","get","q","response","data","items","length","console","log","window","scrollTo","renderContent","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.30e960e5.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://www.googleapis.com/youtube/v3',\r\n  params: {\r\n    part: 'snippet',\r\n    maxResults: 20,\r\n    type: 'video',\r\n    key: process.env.REACT_APP_YOUTUBE_API_KEY\r\n  }\r\n});\r\n","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends React.Component {\r\n  state = { term: '' };\r\n\r\n  onFormSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onTermSubmit(this.state.term);\r\n  };\r\n\r\n  onInputChange = e => {\r\n    this.setState({ term: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui fluid category search\">\r\n        <form\r\n          className=\"ui icon input form\"\r\n          onSubmit={this.onFormSubmit}\r\n          style={{ width: '100%' }}\r\n        >\r\n          <input\r\n            className=\"prompt\"\r\n            type=\"text\"\r\n            placeholder=\"Search Videos...\"\r\n            onChange={this.onInputChange}\r\n            value={this.state.term}\r\n          />\r\n          <i className=\"search icon\"></i>\r\n        </form>\r\n        <div className=\"results\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport './VideoItem.css';\r\n\r\nconst VideoItem = ({ video, onVideoSelect }) => {\r\n  return (\r\n    <div className=\"video-item__container\" onClick={() => onVideoSelect(video)}>\r\n      <img\r\n        src={video.snippet.thumbnails.medium.url}\r\n        alt={video.snippet.description}\r\n      ></img>\r\n      <h5 className=\"header\">{video.snippet.title}</h5>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoItem;\r\n","import React from 'react';\r\nimport './VideoList.css';\r\nimport VideoItem from './VideoItem';\r\n\r\nconst VideoList = ({ videos, onVideoSelect }) => {\r\n  const renderedList = videos.map(video => {\r\n    return (\r\n      <VideoItem\r\n        onVideoSelect={onVideoSelect}\r\n        video={video}\r\n        key={video.id.videoId}\r\n      ></VideoItem>\r\n    );\r\n  });\r\n\r\n  return <div className=\"video-list\">{renderedList}</div>;\r\n};\r\n\r\nexport default VideoList;\r\n","import React from 'react';\r\nimport './VideoDetail.css';\r\n\r\nconst VideoDetail = ({ video }) => {\r\n  if (video) {\r\n    const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\r\n\r\n    return (\r\n      <div className=\"ui segment video-detail\" style={{ marginTop: '10px' }}>\r\n        <div className=\"ui embed\">\r\n          <iframe src={videoSrc} title=\"Video player\"></iframe>\r\n        </div>\r\n        <h5>{video.snippet.title}</h5>\r\n        <p>{video.snippet.description}</p>\r\n      </div>\r\n    );\r\n  }\r\n  return <div>Loading...</div>;\r\n};\r\n\r\nexport default VideoDetail;\r\n","import React from 'react';\r\n\r\nconst Spinner = props => {\r\n  return (\r\n    <div className=\"ui segment\" style={{ height: '100vh' }}>\r\n      <div className=\"ui active inverted dimmer\">\r\n        <div className=\"ui text loader\">{props.message}</div>\r\n      </div>\r\n      <p></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nSpinner.defaultPorps = {\r\n  message: 'Loading...'\r\n};\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport youtube from '../apis/youtube';\r\nimport SearchBar from './SearchBar';\r\nimport VideoList from './VideoList';\r\nimport VideoDetail from './VideoDetail';\r\nimport Spinner from './Spinner';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    videos: [],\r\n    selectedVideo: null,\r\n    loading: true,\r\n    noResultsMessage: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.onTermSubmit('Iceland Aurora');\r\n  }\r\n\r\n  onTermSubmit = async term => {\r\n    this.setState({ loading: true });\r\n    try {\r\n      const response = await youtube.get('/search', {\r\n        params: { q: term }\r\n      });\r\n\r\n      if (response.data.items.length > 0) {\r\n        this.setState({\r\n          videos: response.data.items,\r\n          selectedVideo: response.data.items[0],\r\n          loading: false\r\n        });\r\n      } else {\r\n        this.setState({\r\n          videos: [],\r\n          noResultsMessage: `No results found for '${term}'`,\r\n          loading: true\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  onVideoSelect = video => {\r\n    this.setState({ selectedVideo: video });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  renderContent() {\r\n    if (this.state.videos.length > 0 && this.state.loading === false) {\r\n      return (\r\n        <div>\r\n          <VideoDetail video={this.state.selectedVideo}></VideoDetail>\r\n          <VideoList\r\n            videos={this.state.videos}\r\n            onVideoSelect={this.onVideoSelect}\r\n          ></VideoList>\r\n        </div>\r\n      );\r\n    }\r\n    if (this.state.videos.length === 0 && this.state.loading === true) {\r\n      return <Spinner message={this.state.noResultsMessage}></Spinner>;\r\n    }\r\n    return <Spinner message=\"Loading...\"></Spinner>;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\" style={{ marginTop: '10px' }}>\r\n        <SearchBar onTermSubmit={this.onTermSubmit}></SearchBar>\r\n        {this.renderContent()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}